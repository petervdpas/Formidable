name: Build Formidable (Pre-Release)

on:
  push:
    branches:
      - pre-release/*

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Electron App
        run: npm run build

      - name: Move installer to installer directory
        shell: pwsh
        run: |
          if (-Not (Test-Path "installer")) {
            New-Item -ItemType Directory -Path "installer" | Out-Null
          }
          Move-Item "dist/Formidable Setup 1.0.0.exe" "installer/Formidable Setup.exe" -Force

      # üîê Download en correct extracten van eSigner CKA
      - name: Download and install eSigner CKA
        shell: pwsh
        run: |
          Invoke-WebRequest -OutFile eSignerCKA.zip "https://github.com/SSLcom/eSignerCKA/releases/download/v1.0.6/SSL.COM-eSigner-CKA_1.0.6.zip"
          Expand-Archive -Path eSignerCKA.zip -DestinationPath C:\eSignerCKA -Force
          $tool = Get-ChildItem -Path C:\eSignerCKA -Recurse -Filter eSignerCKATool.exe | Select-Object -First 1
          Copy-Item $tool.FullName -Destination "C:\eSignerCKA\eSignerCKATool.exe"

      # üõ†Ô∏è Configureer eSigner CKA met je GitHub secrets
      - name: Configure eSigner CKA
        shell: pwsh
        run: |
          & "C:\eSignerCKA\eSignerCKATool.exe" config `
            -mode "${{ secrets.ESIGNER_MODE }}" `
            -user "${{ secrets.ESIGNER_USERNAME }}" `
            -pass "${{ secrets.ESIGNER_PASSWORD }}" `
            -totp "${{ secrets.ESIGNER_TOTP_SECRET }}" `
            -key "C:\eSignerCKA\master.key" -r

      - name: Load certificate into Windows Store
        shell: pwsh
        run: |
          & "C:\eSignerCKA\eSignerCKATool.exe" unload
          & "C:\eSignerCKA\eSignerCKATool.exe" load

      - name: Find certificate thumbprint
        id: find_thumbprint
        shell: pwsh
        run: |
          $cert = Get-ChildItem Cert:\CurrentUser\My -CodeSigningCert | Select-Object -First 1
          echo "THUMBPRINT=$($cert.Thumbprint)" >> $env:GITHUB_ENV

      # üñãÔ∏è Sign de installer
      - name: Sign installer
        shell: pwsh
        run: |
          & "C:\Program Files (x86)\Windows Kits\10\bin\10.0.22621.0\x86\signtool.exe" sign `
            /fd sha256 /tr http://ts.ssl.com /td sha256 `
            /sha1 $env:THUMBPRINT `
            "installer/Formidable Setup.exe"

      # üì¶ Upload het gesigneerde bestand als artifact
      - name: Upload signed installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: Formidable Installer (signed)
          path: installer/Formidable Setup.exe

      # üöÄ Maak GitHub release aan
      - name: Create GitHub Pre-Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0-pre
          name: Formidable v1.0.0 Pre-Release
          draft: false
          prerelease: true
          body: |
            ## Pre-Release Notes
            - This is a pre-release version of Formidable.
            - Signed automatically with SSL.com's eSigner.
            - Please test and provide feedback.
          files: installer/Formidable Setup.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
