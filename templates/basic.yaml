name: Basic example
filename: basic.yaml
item_field: test
markdown_template: |-
  ---
  title: Auto-generated Report
  author: Formidable Generator
  date: 2025-07-30
  toc: true
  toc-title: Contents
  toc-own-page: true
  ---

  ## GUID

  _{{fieldDescription "id"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "id")}}
  ```
  {{field "id"}}
  ---

  ## Test

  _{{fieldDescription "test"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "test")}}
  ```
  {{field "test"}}
  ---

  ## Check

  _{{fieldDescription "check"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "check")}}
  ```
  {{field "check"}}
  ---

  ## Dropdown

  _{{fieldDescription "dropdown"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "dropdown")}}
  ```
  ```sh
  [LOG]
  {{json (fieldMeta "dropdown" "options")}}
  ```
  Selected: {{field "dropdown"}}
  (Value: {{field "dropdown" "value"}})
  ---

  ## Multiple Choice

  _{{fieldDescription "multichoice"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "multichoice")}}
  ```
  ```sh
  [LOG]
  {{json (fieldMeta "multichoice" "options")}}
  ```
  - Labels:
  {{#each (fieldRaw "multichoice") as |val idx|}}
    {{#with (lookupOption (fieldMeta "multichoice" "options") val) as |opt|}}
      {{opt.label}}{{#unless (eq idx (subtract (length (fieldRaw "multichoice")) 1))}}, {{/unless}}
    {{/with}}
  {{/each}}

  - Values: {{fieldRaw "multichoice"}}

  - All Options:
  {{#with (fieldRaw "multichoice") as |selected|}}
    {{#each (fieldMeta "multichoice" "options") as |opt|}}
    - [{{#if (includes selected opt.value)}}x{{else}} {{/if}}] {{opt.label}}
    {{/each}}
  {{/with}}
  ---

  ## Radio

  _{{fieldDescription "radio"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "radio")}}
  ```
  ```sh
  [LOG]
  {{json (fieldMeta "radio" "options")}}
  ```
  Selected: {{field "radio"}}
  (Value: {{field "radio" "value"}})
  ---

  ## Mline

  _{{fieldDescription "mline"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "mline")}}
  ```
  {{field "mline"}}
  ---

  ## Numpy

  _{{fieldDescription "numpy"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "numpy")}}
  ```
  {{field "numpy"}}
  ---

  ## Rangie

  _{{fieldDescription "rangie"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "rangie")}}
  ```
  {{field "rangie"}}
  ---

  ## Birthday

  _{{fieldDescription "bday"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "bday")}}
  ```
  {{field "bday"}}
  ---

  ## Listy

  _{{fieldDescription "listy"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "listy")}}
  ```
  {{#each (fieldRaw "listy")}}
  - {{this}}
  {{/each}}
  ---

  ## Table

  _{{fieldDescription "datable"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "datable")}}
  ```
  ```sh
  [LOG]
  {{json (fieldMeta "datable" "options")}}
  ```
  {{#if (fieldRaw "datable")}}

  <!-- Column Values -->
    {{#with (fieldMeta "datable" "options") as |headers|}}
  |{{#each headers}}{{value}} |{{/each}}
  |{{#each headers}}--|{{/each}}
    {{/with}}
    {{#each (fieldRaw "datable")}}
  |{{#each this}}{{this}} |{{/each}}
    {{/each}}

  <!-- Column Labels -->
    {{#with (fieldMeta "datable" "options") as |headers|}}
  |{{#each headers}}{{label}}{{^label}}{{value}}{{/label}} |{{/each}}
  |{{#each headers}}--|{{/each}}
    {{/with}}
    {{#each (fieldRaw "datable")}}
  |{{#each this}}{{this}} |{{/each}}
    {{/each}}

  {{/if}}
  ---

  ## Design

  _{{fieldDescription "design"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "design")}}
  ```
  {{#if (fieldRaw "design")}}
  ![Design]({{field "design"}})
  {{else}}
  _No image uploaded for Design_
  {{/if}}
  ---

  ## Linktest

  _{{fieldDescription "linktest"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "linktest")}}
  ```
  {{field "linktest"}}
  ---

  ## Tags

  _{{fieldDescription "ttags"}}_

  ```sh
  [LOG]
  {{json (fieldRaw "ttags")}}
  ```
  {{#if (fieldRaw "ttags")}}
  Tags(regular): {{field "ttags"}}
  Tags(with #): {{tags (fieldRaw "ttags") withHash=true}}
  Tags(without #): {{tags (fieldRaw "ttags") withHash=false}}
  {{else}}
  _No tags specified_
  {{/if}}
sidebar_expression: >-
  [ test | check ? { text: "You approved this!", classes: ["expr-text-green",
  "expr-bold"] } : { text: "You declined this!", classes: ["expr-text-red",
  "expr-bold", "expr-blinking"] } ]
enable_collection: true
fields:
  - key: id
    type: guid
    label: GUID
    description: ''
    expression_item: false
    two_column: false
    default: ''
    options: &ref_0 []
    primary_key: true
  - key: test
    type: text
    label: Test
    description: A basic text input for demonstration purposes.
    expression_item: true
    two_column: true
    default: Default value
    options: *ref_0
  - key: check
    type: boolean
    label: Check
    description: Enable or disable this feature using a checkbox.
    expression_item: true
    two_column: true
    default: ''
    options:
      - value: true
        label: 'On'
      - value: false
        label: 'Off'
  - key: dropdown
    type: dropdown
    label: Dropdown
    description: Select a single value from a dropdown menu.
    expression_item: false
    two_column: true
    default: R
    options:
      - value: L
        label: Left
      - value: R
        label: Right
  - key: multichoice
    type: multioption
    label: Multiple Choice
    description: Choose one or more options from a list of checkboxes.
    expression_item: false
    two_column: true
    default: ''
    options:
      - value: A
        label: Option A
      - value: B
        label: Option B
      - value: C
        label: Option C
  - key: radio
    type: radio
    label: Radio
    description: Pick one option using radio buttons.
    expression_item: false
    two_column: true
    default: DOG
    options:
      - value: CAT
        label: Cat
      - value: DOG
        label: Dog
      - value: BIRD
        label: Bird
  - key: mline
    type: textarea
    label: Mline
    description: Enter longer text, such as notes or paragraphs.
    expression_item: false
    two_column: false
    default: A whole lot of prefab text...
    options: *ref_0
    format: markdown
  - key: numpy
    type: number
    label: Numpy
    description: A numeric input field. Only accepts numbers.
    expression_item: false
    two_column: false
    default: '17'
    options: *ref_0
  - key: rangie
    type: range
    label: Rangie
    description: A Range slider. Values are set by sliding the value
    expression_item: false
    two_column: true
    default: '20'
    options:
      - value: min
        label: '0'
      - value: max
        label: '100'
      - value: step
        label: '5'
  - key: bday
    type: date
    label: Birthday
    description: Select a date from the calendar picker.
    expression_item: false
    two_column: false
    default: '1968-12-23'
    options: *ref_0
  - key: listy
    type: list
    label: Listy
    description: Add multiple short entries in list format.
    expression_item: false
    two_column: false
    default: ''
    options: *ref_0
  - key: datable
    type: table
    label: Table
    description: Enter rows of structured data using defined columns.
    expression_item: false
    two_column: false
    default: ''
    options:
      - value: col1
        label: Column 1
      - value: col2
        label: Column 2
      - value: col3
        label: Column 3
  - key: design
    type: image
    label: Design
    description: Printing an image
    expression_item: false
    two_column: false
    default: ''
    options: *ref_0
  - key: linktest
    type: link
    label: Linktest
    description: A link test
    expression_item: false
    two_column: false
    default: ''
    options: *ref_0
  - key: ttags
    type: tags
    label: Tags
    description: Add any tag you feel like!
    expression_item: false
    two_column: false
    default: ''
    options: *ref_0
  - key: myScript
    type: code
    label: MyScript
    description: Testing script
    expression_item: false
    two_column: false
    default: |-
      return (async () => {
        await new Promise(r => setTimeout(r, 50));
        const value = ["a","b","c"].join("-");
        console.log("async value:", value);
        return value;
      })();
    options: *ref_0
    run_mode: manual
    allow_run: true
    input_mode: safe
    api_mode: frozen
    api_pick: []
